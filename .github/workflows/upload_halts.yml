name: Getting Halts
# Don't want to burn my private minutes at this point
on:
  push:
    branches:
      - master
      - feature/*
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '30 13-22 * * 1-5'

env:
  DISCORD_NEWS_WEBHOOK: ${{ secrets.DISCORD_NEWS_WEBHOOK }}
  DISCORD_NEWS_WEBHOOK_ALL: ${{ secrets.DISCORD_NEWS_WEBHOOK_ALL }}
  STOCK_API: ${{ secrets.STOCK_API }}
  FAUNA_KEY: ${{ secrets.FAUNA_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo
      
      - uses: actions/setup-python@v2
        with:
          python-version: '3.6.7' # Version range or exact version of a Python version to use, using SemVer's version range syntax
          architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
      
      - name: Install
        run: pip install -r requirements.txt

      - name: Run Script for news and halts
        run: |
          python news_and_halts.py
          mv halts.html dist/ || true
          mv news.html dist/ || true

      - name: Run Script for all news
        run: |
          python all_stock_news.py

      - uses: actions/upload-artifact@v2
        with:
          name: csvs
          path: full_news.csv

      - name: Commit files
        run: |
          git add *.csv
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m "Add changes" -a

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@3.5.9
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: dist # The folder the action should deploy.

  discord:
    name: Discord
    needs: build # set needs only last job except this job
    runs-on: ubuntu-latest
    if: always() # set always
    steps:
        # run this action to get workflow conclusion
        # You can get conclusion via env (env.WORKFLOW_CONCLUSION)
      - uses: technote-space/workflow-conclusion-action@v2
      - name: update discord
        run: |
          git clone https://github.com/DiscordHooks/github-actions-discord-webhook.git webhook
          bash webhook/send.sh "halts and news failure" $DISCORD_NEWS_WEBHOOK
          bash webhook/send.sh "@grandfleet check this out" $DISCORD_NEWS_WEBHOOK
        if: env.WORKFLOW_CONCLUSION == 'failure' # notify only if failure 
